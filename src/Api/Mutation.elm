-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module Api.Mutation exposing (..)

import Api.InputObject
import Api.Interface
import Api.Object
import Api.Scalar
import Api.ScalarCodecs
import Api.Union
import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode as Encode exposing (Value)
import Graphql.Operation exposing (RootMutation, RootQuery, RootSubscription)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.SelectionSet exposing (SelectionSet)
import Json.Decode as Decode exposing (Decoder)


type alias UpdateUserRequiredArguments =
    { id : Api.ScalarCodecs.Id
    , data : Api.InputObject.UserInput
    }


{-| Update an existing document in the collection of 'User'

  - id - The 'User' document's ID
  - data - 'User' input values

-}
updateUser : UpdateUserRequiredArguments -> SelectionSet decodesTo Api.Object.User -> SelectionSet (Maybe decodesTo) RootMutation
updateUser requiredArgs object_ =
    Object.selectionForCompositeField "updateUser" [ Argument.required "id" requiredArgs.id (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId), Argument.required "data" requiredArgs.data Api.InputObject.encodeUserInput ] object_ (identity >> Decode.nullable)


type alias CreateUserRequiredArguments =
    { data : Api.InputObject.UserInput }


{-| Create a new document in the collection of 'User'

  - data - 'User' input values

-}
createUser : CreateUserRequiredArguments -> SelectionSet decodesTo Api.Object.User -> SelectionSet decodesTo RootMutation
createUser requiredArgs object_ =
    Object.selectionForCompositeField "createUser" [ Argument.required "data" requiredArgs.data Api.InputObject.encodeUserInput ] object_ identity


type alias CreateAvailableNetworkRequiredArguments =
    { data : Api.InputObject.AvailableNetworkInput }


{-| Create a new document in the collection of 'AvailableNetwork'

  - data - 'AvailableNetwork' input values

-}
createAvailableNetwork : CreateAvailableNetworkRequiredArguments -> SelectionSet decodesTo Api.Object.AvailableNetwork -> SelectionSet decodesTo RootMutation
createAvailableNetwork requiredArgs object_ =
    Object.selectionForCompositeField "createAvailableNetwork" [ Argument.required "data" requiredArgs.data Api.InputObject.encodeAvailableNetworkInput ] object_ identity


type alias UpdateAvailableNetworkRequiredArguments =
    { id : Api.ScalarCodecs.Id
    , data : Api.InputObject.AvailableNetworkInput
    }


{-| Update an existing document in the collection of 'AvailableNetwork'

  - id - The 'AvailableNetwork' document's ID
  - data - 'AvailableNetwork' input values

-}
updateAvailableNetwork : UpdateAvailableNetworkRequiredArguments -> SelectionSet decodesTo Api.Object.AvailableNetwork -> SelectionSet (Maybe decodesTo) RootMutation
updateAvailableNetwork requiredArgs object_ =
    Object.selectionForCompositeField "updateAvailableNetwork" [ Argument.required "id" requiredArgs.id (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId), Argument.required "data" requiredArgs.data Api.InputObject.encodeAvailableNetworkInput ] object_ (identity >> Decode.nullable)


type alias DeleteUserRequiredArguments =
    { id : Api.ScalarCodecs.Id }


{-| Delete an existing document in the collection of 'User'

  - id - The 'User' document's ID

-}
deleteUser : DeleteUserRequiredArguments -> SelectionSet decodesTo Api.Object.User -> SelectionSet (Maybe decodesTo) RootMutation
deleteUser requiredArgs object_ =
    Object.selectionForCompositeField "deleteUser" [ Argument.required "id" requiredArgs.id (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) ] object_ (identity >> Decode.nullable)


type alias DeleteAvailableNetworkRequiredArguments =
    { id : Api.ScalarCodecs.Id }


{-| Delete an existing document in the collection of 'AvailableNetwork'

  - id - The 'AvailableNetwork' document's ID

-}
deleteAvailableNetwork : DeleteAvailableNetworkRequiredArguments -> SelectionSet decodesTo Api.Object.AvailableNetwork -> SelectionSet (Maybe decodesTo) RootMutation
deleteAvailableNetwork requiredArgs object_ =
    Object.selectionForCompositeField "deleteAvailableNetwork" [ Argument.required "id" requiredArgs.id (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) ] object_ (identity >> Decode.nullable)
